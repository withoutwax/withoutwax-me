{"ast":null,"code":"import { useRouter } from 'next/router';\nimport { useEffect } from 'react';\nimport * as Fathom from 'fathom-client';\nexport const useAnalytics = () => {\n  const router = useRouter();\n  useEffect(() => {\n    if (false) {\n      Fathom.load(process.env.NEXT_PUBLIC_FATHOM_SITE_ID, {\n        includedDomains: ['withoutwax.me']\n      });\n    }\n\n    function onRouteChangeComplete() {\n      Fathom.trackPageview();\n    }\n\n    router.events.on('routeChangeComplete', onRouteChangeComplete);\n    return () => {\n      router.events.off('routeChangeComplete', onRouteChangeComplete);\n    };\n  }, []);\n};","map":{"version":3,"sources":["/Users/withoutwax/Project/withoutwax.me/lib/analytics.js"],"names":["useRouter","useEffect","Fathom","useAnalytics","router","load","process","env","NEXT_PUBLIC_FATHOM_SITE_ID","includedDomains","onRouteChangeComplete","trackPageview","events","on","off"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,eAA2C;AACzCC,MAAAA,MAAM,CAACG,IAAP,CAAYC,OAAO,CAACC,GAAR,CAAYC,0BAAxB,EAAoD;AAClDC,QAAAA,eAAe,EAAE,CAAC,eAAD;AADiC,OAApD;AAGD;;AAED,aAASC,qBAAT,GAAiC;AAC/BR,MAAAA,MAAM,CAACS,aAAP;AACD;;AAEDP,IAAAA,MAAM,CAACQ,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCH,qBAAxC;AAEA,WAAO,MAAM;AACXN,MAAAA,MAAM,CAACQ,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCJ,qBAAzC;AACD,KAFD;AAGD,GAhBQ,EAgBN,EAhBM,CAAT;AAiBD,CApBM","sourcesContent":["import { useRouter } from 'next/router';\nimport { useEffect } from 'react';\nimport * as Fathom from 'fathom-client';\n\nexport const useAnalytics = () => {\n  const router = useRouter();\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      Fathom.load(process.env.NEXT_PUBLIC_FATHOM_SITE_ID, {\n        includedDomains: ['withoutwax.me']\n      });\n    }\n\n    function onRouteChangeComplete() {\n      Fathom.trackPageview();\n    }\n\n    router.events.on('routeChangeComplete', onRouteChangeComplete);\n\n    return () => {\n      router.events.off('routeChangeComplete', onRouteChangeComplete);\n    };\n  }, []);\n};\n"]},"metadata":{},"sourceType":"module"}