{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport useSWR from 'swr';\nimport format from 'comma-number';\nimport fetcher from '@/lib/fetcher';\nexport default function ViewCounter(_ref) {\n  _s();\n\n  var slug = _ref.slug;\n\n  var _useSWR = useSWR(\"/api/views/\".concat(slug), fetcher),\n      data = _useSWR.data;\n\n  var views = data === null || data === void 0 ? void 0 : data.total;\n  useEffect(function () {\n    var registerView = function registerView() {\n      return fetch(\"/api/views/\".concat(slug), {\n        method: 'POST'\n      });\n    };\n\n    registerView();\n  }, [slug]);\n  return \"\".concat(views ? format(views) : '–––', \" views\");\n}\n\n_s(ViewCounter, \"hxft40aJZWewM5nvT+tj0GSJMIA=\", false, function () {\n  return [useSWR];\n});\n\n_c = ViewCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewCounter\");","map":{"version":3,"sources":["/Users/withoutwax/Project/withoutwax.me/components/ViewCounter.js"],"names":["useEffect","useSWR","format","fetcher","ViewCounter","slug","data","views","total","registerView","fetch","method"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AAEA,eAAe,SAASC,WAAT,OAA+B;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,gBAC3BJ,MAAM,sBAAeI,IAAf,GAAuBF,OAAvB,CADqB;AAAA,MACpCG,IADoC,WACpCA,IADoC;;AAE5C,MAAMC,KAAK,GAAGD,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,KAApB;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMS,YAAY,GAAG,SAAfA,YAAe;AAAA,aACnBC,KAAK,sBAAeL,IAAf,GAAuB;AAC1BM,QAAAA,MAAM,EAAE;AADkB,OAAvB,CADc;AAAA,KAArB;;AAKAF,IAAAA,YAAY;AACb,GAPQ,EAON,CAACJ,IAAD,CAPM,CAAT;AASA,mBAAUE,KAAK,GAAGL,MAAM,CAACK,KAAD,CAAT,GAAmB,KAAlC;AACD;;GAduBH,W;UACLH,M;;;KADKG,W","sourcesContent":["import { useEffect } from 'react';\nimport useSWR from 'swr';\nimport format from 'comma-number';\n\nimport fetcher from '@/lib/fetcher';\n\nexport default function ViewCounter({ slug }) {\n  const { data } = useSWR(`/api/views/${slug}`, fetcher);\n  const views = data?.total;\n\n  useEffect(() => {\n    const registerView = () =>\n      fetch(`/api/views/${slug}`, {\n        method: 'POST'\n      });\n\n    registerView();\n  }, [slug]);\n\n  return `${views ? format(views) : '–––'} views`;\n}\n"]},"metadata":{},"sourceType":"module"}