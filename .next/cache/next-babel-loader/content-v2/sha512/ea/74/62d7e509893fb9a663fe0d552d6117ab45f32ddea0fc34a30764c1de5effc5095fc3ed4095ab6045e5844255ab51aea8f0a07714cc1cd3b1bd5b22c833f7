{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/withoutwax/Project/withoutwax.me/pages/project.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { NextSeo } from 'next-seo';\nimport Container from '@/components/Container';\nimport ProjectPost from '@/components/ProjectPost';\nvar url = 'https://withoutwax.me/project';\nvar title = 'Project â€“ Will Kim';\nvar description = 'Thoughts on the software industry, programming, tech, videography, music, and my personal life.';\nexport var __N_SSG = true;\nexport default function Blog(_ref) {\n  _s();\n\n  var _this = this;\n\n  var posts = _ref.posts;\n\n  var _useState = useState(''),\n      searchValue = _useState[0],\n      setSearchValue = _useState[1];\n\n  var filteredProjectPosts = posts.sort(function (a, b) {\n    return Number(new Date(b.publishedAt)) - Number(new Date(a.publishedAt));\n  }).filter(function (frontMatter) {\n    return frontMatter.title.toLowerCase().includes(searchValue.toLowerCase());\n  }).filter(function (frontMatter) {\n    return frontMatter.category == 'project';\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(NextSeo, {\n      title: title,\n      description: description,\n      canonical: url,\n      openGraph: {\n        url: url,\n        title: title,\n        description: description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col justify-center items-start max-w-2xl mx-auto mb-16\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-bold text-3xl md:text-5xl tracking-tight mb-4 text-black dark:text-white\",\n        children: \"Project \\uD83D\\uDD79\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 dark:text-gray-400 mb-10\",\n        children: \"Things that I tinker on my spare time.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"class\": \"flex flex-wrap\",\n        children: [!filteredProjectPosts.length && 'No posts found.', filteredProjectPosts.map(function (frontMatter) {\n          return /*#__PURE__*/_jsxDEV(ProjectPost, _objectSpread({}, frontMatter), frontMatter.title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Blog, \"HM3Ln43XRFR/2uR77U2yFU1TAX4=\");\n\n_c = Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["/Users/withoutwax/Project/withoutwax.me/pages/project.js"],"names":["useState","NextSeo","Container","ProjectPost","url","title","description","Blog","posts","searchValue","setSearchValue","filteredProjectPosts","sort","a","b","Number","Date","publishedAt","filter","frontMatter","toLowerCase","includes","category","length","map"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,UAAxB;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAGA,IAAMC,GAAG,GAAG,+BAAZ;AACA,IAAMC,KAAK,GAAG,oBAAd;AACA,IAAMC,WAAW,GACf,iGADF;;AAGA,eAAe,SAASC,IAAT,OAAyB;AAAA;;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBACAR,QAAQ,CAAC,EAAD,CADR;AAAA,MAC/BS,WAD+B;AAAA,MAClBC,cADkB;;AAEtC,MAAMC,oBAAoB,GAAGH,KAAK,CAC/BI,IAD0B,CAEzB,UAACC,CAAD,EAAIC,CAAJ;AAAA,WACEC,MAAM,CAAC,IAAIC,IAAJ,CAASF,CAAC,CAACG,WAAX,CAAD,CAAN,GAAkCF,MAAM,CAAC,IAAIC,IAAJ,CAASH,CAAC,CAACI,WAAX,CAAD,CAD1C;AAAA,GAFyB,EAK1BC,MAL0B,CAKnB,UAACC,WAAD;AAAA,WACNA,WAAW,CAACd,KAAZ,CAAkBe,WAAlB,GAAgCC,QAAhC,CAAyCZ,WAAW,CAACW,WAAZ,EAAzC,CADM;AAAA,GALmB,EAQ1BF,MAR0B,CAQnB,UAACC,WAAD;AAAA,WACNA,WAAW,CAACG,QAAZ,IAAwB,SADlB;AAAA,GARmB,CAA7B;AAYA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,OAAD;AACE,MAAA,KAAK,EAAEjB,KADT;AAEE,MAAA,WAAW,EAAEC,WAFf;AAGE,MAAA,SAAS,EAAEF,GAHb;AAIE,MAAA,SAAS,EAAE;AACTA,QAAAA,GAAG,EAAHA,GADS;AAETC,QAAAA,KAAK,EAALA,KAFS;AAGTC,QAAAA,WAAW,EAAXA;AAHS;AAJb;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,kEAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,+EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAG,QAAA,SAAS,EAAC,wCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAuDE;AAAK,iBAAM,gBAAX;AAAA,mBACG,CAACK,oBAAoB,CAACY,MAAtB,IAAgC,iBADnC,EAEGZ,oBAAoB,CAACa,GAArB,CAAyB,UAACL,WAAD;AAAA,8BACxB,QAAC,WAAD,oBAAyCA,WAAzC,GAAkBA,WAAW,CAACd,KAA9B;AAAA;AAAA;AAAA;AAAA,mBADwB;AAAA,SAAzB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAvDF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4ED;;GA1FuBE,I;;KAAAA,I","sourcesContent":["import { useState } from 'react';\nimport { NextSeo } from 'next-seo';\n\nimport Container from '@/components/Container';\nimport ProjectPost from '@/components/ProjectPost';\nimport { getAllFilesFrontMatter } from '@/lib/mdx';\n\nconst url = 'https://withoutwax.me/project';\nconst title = 'Project â€“ Will Kim';\nconst description =\n  'Thoughts on the software industry, programming, tech, videography, music, and my personal life.';\n\nexport default function Blog({ posts }) {\n  const [searchValue, setSearchValue] = useState('');\n  const filteredProjectPosts = posts\n    .sort(\n      (a, b) =>\n        Number(new Date(b.publishedAt)) - Number(new Date(a.publishedAt))\n    )\n    .filter((frontMatter) => \n      frontMatter.title.toLowerCase().includes(searchValue.toLowerCase())\n    )\n    .filter((frontMatter) => \n      frontMatter.category == 'project'\n    );\n\n  return (\n    <Container>\n      <NextSeo\n        title={title}\n        description={description}\n        canonical={url}\n        openGraph={{\n          url,\n          title,\n          description\n        }}\n      />\n      <div className=\"flex flex-col justify-center items-start max-w-2xl mx-auto mb-16\">\n        <h1 className=\"font-bold text-3xl md:text-5xl tracking-tight mb-4 text-black dark:text-white\">\n          Project ðŸ•¹\n        </h1>\n        <p className=\"text-gray-600 dark:text-gray-400 mb-10\">\n          {`Things that I tinker on my spare time.`}\n        </p>\n        {/* <div className=\"relative w-full mb-4\">\n          <input\n            aria-label=\"Search articles\"\n            type=\"text\"\n            onChange={(e) => setSearchValue(e.target.value)}\n            placeholder=\"Search articles\"\n            className=\"px-4 py-2 border border-gray-300 dark:border-gray-900 focus:ring-blue-500 focus:border-blue-500 block w-full rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\"\n          />\n          <svg\n            className=\"absolute right-3 top-3 h-5 w-5 text-gray-400 dark:text-gray-300\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n            />\n          </svg>\n        </div> */}\n        {/* {!searchValue && (\n          <>\n            <h3 className=\"font-bold text-2xl md:text-4xl tracking-tight mb-4 mt-8 text-black dark:text-white\">\n              Most Popular\n            </h3>\n            <ProjectPost\n              title=\"Everything I Know About Style Guides, Design Systems, and Component Libraries\"\n              summary=\"A deep-dive on everything I've learned in the past year building style guides, design systems, component libraries, and their best practices.\"\n              slug=\"style-guides-component-libraries-design-systems\"\n            />\n            <ProjectPost\n              title=\"How Stripe Designs Beautiful Websites\"\n              summary=\"Examining the tips and tricks used to make Stripe's website design a notch above the rest.\"\n              slug=\"how-stripe-designs-beautiful-websites\"\n            />\n            <ProjectPost\n              title=\"Creating a Monorepo with Lerna & Yarn Workspaces\"\n              summary=\"In this guide, you will learn how to create a Monorepo to manage multiple packages with a shared build, test, and release process.\"\n              slug=\"monorepo-lerna-yarn-workspaces\"\n            />\n          </>\n        )} */}\n        {/* <h3 className=\"font-bold text-2xl md:text-4xl tracking-tight mb-4 mt-8 text-black dark:text-white\">\n          All Posts\n        </h3> */}\n        <div class=\"flex flex-wrap\">\n          {!filteredProjectPosts.length && 'No posts found.'}\n          {filteredProjectPosts.map((frontMatter) => (\n            <ProjectPost key={frontMatter.title} {...frontMatter} />\n          ))}\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nexport async function getStaticProps() {\n  const posts = await getAllFilesFrontMatter('blog');\n\n  return { props: { posts } };\n}\n"]},"metadata":{},"sourceType":"module"}