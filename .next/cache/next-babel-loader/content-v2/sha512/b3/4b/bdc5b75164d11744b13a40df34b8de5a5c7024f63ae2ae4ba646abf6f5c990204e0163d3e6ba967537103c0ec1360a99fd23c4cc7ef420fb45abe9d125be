{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/withoutwax/Project/withoutwax.me/pages/archive.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport { NextSeo } from 'next-seo';\nimport Container from '@/components/Container';\nimport ArchivePost from '@/components/ArchivePost';\nimport { getAllFilesFrontMatter } from '@/lib/mdx';\nconst url = 'https://withoutwax.me/blog';\nconst title = 'Blog â€“ Will Kim';\nconst description = 'Thoughts on the software industry, programming, tech, videography, music, and my personal life.';\nexport default function Blog({\n  posts\n}) {\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState('');\n  const filteredArchivePosts = posts.sort((a, b) => Number(new Date(b.publishedAt)) - Number(new Date(a.publishedAt))).filter(frontMatter => frontMatter.title.toLowerCase().includes(searchValue.toLowerCase())).filter(frontMatter => frontMatter.category == 'archive');\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(NextSeo, {\n      title: title,\n      description: description,\n      canonical: url,\n      openGraph: {\n        url,\n        title,\n        description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col justify-center items-start max-w-2xl mx-auto mb-16\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-bold text-3xl md:text-5xl tracking-tight mb-4 text-black dark:text-white\",\n        children: \"Archive \\uD83D\\uDDC4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 dark:text-gray-400 mb-4\",\n        children: `This place is where I archived all the posts and projects from the past.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), !filteredArchivePosts.length && 'No posts found.', filteredArchivePosts.map(frontMatter => /*#__PURE__*/_jsxDEV(ArchivePost, _objectSpread({}, frontMatter), frontMatter.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticProps() {\n  const posts = await getAllFilesFrontMatter('blog');\n  return {\n    props: {\n      posts\n    }\n  };\n}","map":{"version":3,"sources":["/Users/withoutwax/Project/withoutwax.me/pages/archive.js"],"names":["useState","NextSeo","Container","ArchivePost","getAllFilesFrontMatter","url","title","description","Blog","posts","searchValue","setSearchValue","filteredArchivePosts","sort","a","b","Number","Date","publishedAt","filter","frontMatter","toLowerCase","includes","category","length","map","getStaticProps","props"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,UAAxB;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,sBAAT,QAAuC,WAAvC;AAEA,MAAMC,GAAG,GAAG,4BAAZ;AACA,MAAMC,KAAK,GAAG,iBAAd;AACA,MAAMC,WAAW,GACf,iGADF;AAGA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAyB;AACtC,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMY,oBAAoB,GAAGH,KAAK,CAC/BI,IAD0B,CAEzB,CAACC,CAAD,EAAIC,CAAJ,KACEC,MAAM,CAAC,IAAIC,IAAJ,CAASF,CAAC,CAACG,WAAX,CAAD,CAAN,GAAkCF,MAAM,CAAC,IAAIC,IAAJ,CAASH,CAAC,CAACI,WAAX,CAAD,CAHjB,EAK1BC,MAL0B,CAKlBC,WAAD,IACNA,WAAW,CAACd,KAAZ,CAAkBe,WAAlB,GAAgCC,QAAhC,CAAyCZ,WAAW,CAACW,WAAZ,EAAzC,CANyB,EAQ1BF,MAR0B,CAQlBC,WAAD,IACNA,WAAW,CAACG,QAAZ,IAAwB,SATC,CAA7B;AAYA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,OAAD;AACE,MAAA,KAAK,EAAEjB,KADT;AAEE,MAAA,WAAW,EAAEC,WAFf;AAGE,MAAA,SAAS,EAAEF,GAHb;AAIE,MAAA,SAAS,EAAE;AACTA,QAAAA,GADS;AAETC,QAAAA,KAFS;AAGTC,QAAAA;AAHS;AAJb;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,kEAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,+EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAG,QAAA,SAAS,EAAC,uCAAb;AAAA,kBACI;AADJ;AAAA;AAAA;AAAA;AAAA,cAJF,EA6BG,CAACK,oBAAoB,CAACY,MAAtB,IAAgC,iBA7BnC,EA8BGZ,oBAAoB,CAACa,GAArB,CAA0BL,WAAD,iBACxB,QAAC,WAAD,oBAAyCA,WAAzC,GAAkBA,WAAW,CAACd,KAA9B;AAAA;AAAA;AAAA;AAAA,cADD,CA9BH;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD;AAED,OAAO,eAAeoB,cAAf,GAAgC;AACrC,QAAMjB,KAAK,GAAG,MAAML,sBAAsB,CAAC,MAAD,CAA1C;AAEA,SAAO;AAAEuB,IAAAA,KAAK,EAAE;AAAElB,MAAAA;AAAF;AAAT,GAAP;AACD","sourcesContent":["import { useState } from 'react';\nimport { NextSeo } from 'next-seo';\n\nimport Container from '@/components/Container';\nimport ArchivePost from '@/components/ArchivePost';\nimport { getAllFilesFrontMatter } from '@/lib/mdx';\n\nconst url = 'https://withoutwax.me/blog';\nconst title = 'Blog â€“ Will Kim';\nconst description =\n  'Thoughts on the software industry, programming, tech, videography, music, and my personal life.';\n\nexport default function Blog({ posts }) {\n  const [searchValue, setSearchValue] = useState('');\n  const filteredArchivePosts = posts\n    .sort(\n      (a, b) =>\n        Number(new Date(b.publishedAt)) - Number(new Date(a.publishedAt))\n    )\n    .filter((frontMatter) =>\n      frontMatter.title.toLowerCase().includes(searchValue.toLowerCase())\n    )\n    .filter((frontMatter) => \n      frontMatter.category == 'archive'\n    );\n\n  return (\n    <Container>\n      <NextSeo\n        title={title}\n        description={description}\n        canonical={url}\n        openGraph={{\n          url,\n          title,\n          description\n        }}\n      />\n      <div className=\"flex flex-col justify-center items-start max-w-2xl mx-auto mb-16\">\n        <h1 className=\"font-bold text-3xl md:text-5xl tracking-tight mb-4 text-black dark:text-white\">\n          Archive ðŸ—„\n        </h1>\n        <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n          {`This place is where I archived all the posts and projects from the past.`}\n        </p>\n        {/* {!searchValue && (\n          <>\n            <h3 className=\"font-bold text-2xl md:text-4xl tracking-tight mb-4 mt-8 text-black dark:text-white\">\n              Most Popular\n            </h3>\n            <ArchivePost\n              title=\"Everything I Know About Style Guides, Design Systems, and Component Libraries\"\n              summary=\"A deep-dive on everything I've learned in the past year building style guides, design systems, component libraries, and their best practices.\"\n              slug=\"style-guides-component-libraries-design-systems\"\n            />\n            <ArchivePost\n              title=\"How Stripe Designs Beautiful Websites\"\n              summary=\"Examining the tips and tricks used to make Stripe's website design a notch above the rest.\"\n              slug=\"how-stripe-designs-beautiful-websites\"\n            />\n            <ArchivePost\n              title=\"Creating a Monorepo with Lerna & Yarn Workspaces\"\n              summary=\"In this guide, you will learn how to create a Monorepo to manage multiple packages with a shared build, test, and release process.\"\n              slug=\"monorepo-lerna-yarn-workspaces\"\n            />\n          </>\n        )} */}\n        {!filteredArchivePosts.length && 'No posts found.'}\n        {filteredArchivePosts.map((frontMatter) => (\n          <ArchivePost key={frontMatter.title} {...frontMatter} />\n        ))}\n      </div>\n    </Container>\n  );\n}\n\nexport async function getStaticProps() {\n  const posts = await getAllFilesFrontMatter('blog');\n\n  return { props: { posts } };\n}\n"]},"metadata":{},"sourceType":"module"}